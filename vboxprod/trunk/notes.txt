
Info tab class

	itemSelect - Selection changed
		mark tab dirty
		if type is our type, run populate
		
	tabShow - 
		if this tab is dirty, run populate
		
	populate - Get data and populate sections
		if this tab is not shown, do nothing
		else the tab is no longer dirty
		
		
		
	sectionId = x
	selectionType = server|vm|group
	
	isItemSelected :function() {
		this.navTreeSelectionModel.getSelection()[0].type == this.selectionType
			&& id = this.selectionId
	}
	
	dirty = yes/no
	populate() = main drawing function
	redraw() = specific sections
	repopulateOn = ['events..']
	
	repopulateEvent : function() {
		
	}
	#info
		Main information stuff with template
		
	#sections
		Draw sections here
	


NavTree
	- already has stores and records
	
Data mediator
	- don't try to track serverid, let app do this
	
App keeps VM list

	yes - the app should be presented as a unified server. don't try to
	do things in extjs.. it makes hard things easy and easy things impossible
	
	vmlist or just id -> server mapping?
	
	when server comes online - get list of vms
	when server goes offline - remove list of vms
	
	vbox events must update internal list..
	
	
	remote_hostOnlyInterfaceCreate.progress = True
    remote_hostOnlyInterfaceCreate.log = True
    
    @staticmethod
    def remote_hostOnlyInterfaceCreate_log(args, results):
        return { name : "Create host-only interface" }
	