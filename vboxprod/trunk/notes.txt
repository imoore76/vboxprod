
TODO:

	"machine" -> "vm"
	
	XInfoTab calls setTab onRender instead of this.onTabRender	
    this.control({
        'viewport > #MainPanel > ServerTabs > ServerHost' : {
        	render: this.onTabRender
        }
    });
    
    Same for XTasksAndEventsTab
    
	
Stores:

	VM store
	
		read only - controlled by vmdatamediator
		
	Server Store
	
		read / write - controlled by app? 
	
	Group Store
	
		read / write - controlled by app?
		
	
	Could move VM base data outside of datamediator and create
	some sort of data controller. Then getVMData() would go away
	and we'd just have getVMDetails and runtime data. Runtime data
	would have to be kept for all running vms... but it gives a cleaner
	result
		
		
VMs on store record change vs individual events

	SessionState change would change the store, but we may
	not want to redraw a section
	
	Details for instance may only want a MachineData and
		State change
		
	I guess it could subscribe to those directly
	
	Others are:
	
		Info sections - .. same as details
			.. or this could change as well.. Execution Cap would have to be moved
			to VM model.. this could change at runtime.. .. we could modify all the events
			to compensate for this
			
			"runtimeOverlay"
			
		Snapshot tree ... fine..
		
		Nav tree - fine. not expensive to redraw
		
		VM list - fine. not expensive
		

Only details would need 